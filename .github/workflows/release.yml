name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: 3.30.2

      - name: Set up Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Create Build Directory
        run: mkdir build

      - name: Build with CMake
        run: |
          cd build
          cmake -G Ninja -DCMAKE-BUILD-TYPE=Release ..
          cmake --build .

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: tobey
          path: build/Tobey

  build-windows:
    name: Build on Windows
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: 3.30.2

      - name: Create Build Directory
        run: mkdir build

      - name: Set up Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Build with CMake
        run: |
          cd build
          cmake -G Ninja -DCMAKE-BUILD-TYPE=Release ..
          cmake --build .

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: tobey.exe
          path: build/Tobey.exe

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]

    steps:
      - name: Download Linux build artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-binaries
          path: ./artifacts/linux

      - name: Download Windows build artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-binaries
          path: ./artifacts/windows

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Release of version ${{ github.ref_name }}.
          draft: false
          prerelease: true

      - name: Upload Linux build to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/linux/
          asset_name: linux-binaries-${{ github.ref_name }}
          asset_content_type: application/octet-stream

      - name: Upload Windows build to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows/
          asset_name: windows-binaries-${{ github.ref_name }}
          asset_content_type: application/octet-stream
